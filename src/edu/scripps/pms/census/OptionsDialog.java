/*
 * NewOkCancelDialog.java
 *
 * Created on September 26, 2005, 6:09 PM
 */

package edu.scripps.pms.census;

import edu.scripps.pms.census.conf.PostOptions;
import edu.scripps.pms.census.conf.Configuration;
import javax.swing.JCheckBox;

/**
 *
 * @author  rpark
 */
public class OptionsDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    private RelExMainFrame mFrame;
    private Configuration conf;
    
    /** Creates new form NewOkCancelDialog */
    public OptionsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        conf = Configuration.getInstance();
        
        initComponents();
        
        PostOptions options = PostOptions.getInstance();        
        this.filterFragmentIons.setSelected(options.isFilterFragmentIons());
        this.displayFragmentIons.setSelected(options.isDisplayFragmentIons());
        this.detFactorCheck.setSelected(options.isDetFactorCheck());
        this.detFactor.setText( String.valueOf(options.getDetFactorValue()) );
    
        this.mFrame = (RelExMainFrame)parent;        
        
    }
    
    /** Creates new form NewOkCancelDialog */
    /*
    public OptionsDialog(java.awt.Frame parent, boolean modal, PostOptions options) {
        this(parent, modal);

        
    
    }
    */
    
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainOptionPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        displayFragmentIons = new javax.swing.JCheckBox();
        filterFragmentIons = new javax.swing.JCheckBox();
        filterPanel = new javax.swing.JPanel();
        detFactorCheck = new javax.swing.JCheckBox();
        detFactor = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        maxSpectrumShift = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Select Options");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        mainOptionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Fragment Ion Filtering"));

        displayFragmentIons.setText("Display fragment ions");
        displayFragmentIons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        filterFragmentIons.setText("Filter fragment ions");
        filterFragmentIons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, displayFragmentIons, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, filterFragmentIons, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(filterFragmentIons, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3)
                .add(displayFragmentIons, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainOptionPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 460, 100));

        filterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));
        filterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        detFactorCheck.setSelected(true);
        detFactorCheck.setText("Determinant Factor(R*R)");
        filterPanel.add(detFactorCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        detFactor.setColumns(5);
        filterPanel.add(detFactor, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        mainOptionPanel.add(filterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 460, 90));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Spectrum"));
        jPanel2.setAlignmentX(0.0F);
        jPanel2.setAlignmentY(0.0F);
        jPanel2.setDoubleBuffered(true);

        jLabel1.setText("Max. Spectrum shifting");

        maxSpectrumShift.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        maxSpectrumShift.setText(String.valueOf(conf.getMaxSpectrumShift()));

        jLabel2.setText("scans");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(maxSpectrumShift, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxSpectrumShift, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(jLabel1))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        mainOptionPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 460, 80));

        getContentPane().add(mainOptionPanel, java.awt.BorderLayout.CENTER);
        mainOptionPanel.getAccessibleContext().setAccessibleName("Data Independent");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        PostOptions options = PostOptions.getInstance();                
        options.setFilterFragmentIons(this.filterFragmentIons.isSelected());
        
        options.setDisplayFragmentIons(this.displayFragmentIons.isSelected());
        options.setDetFactorCheck(this.detFactorCheck.isSelected());
        options.setDetFactorValue( Float.parseFloat(this.detFactor.getText().trim()) );
        
        
        Configuration conf = Configuration.getInstance();
        
        System.out.println(conf.isDataIndependent());
        if(conf.isDataIndependent())
        {
            if(options.isFilterFragmentIons())
                mFrame.generateInDepFragData(null);
            else
                mFrame.generateInDepData(null);
        }
        else
            mFrame.generateDepData(null);

        mFrame.toggleFilterIcon(this.filterFragmentIons.isSelected());
        
        int maxShift = Integer.parseInt( this.maxSpectrumShift.getText() );
        conf.setMaxSpectrumShift( maxShift );
        
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    /*
    public void setFilterFragmentIons(boolean isTrue)
    {
        filterFragmentIons.setSelected(isTrue);
        
    }
    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionsDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField detFactor;
    private javax.swing.JCheckBox detFactorCheck;
    private javax.swing.JCheckBox displayFragmentIons;
    private javax.swing.JCheckBox filterFragmentIons;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainOptionPanel;
    private javax.swing.JTextField maxSpectrumShift;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    
    private int returnStatus = RET_CANCEL;
}
