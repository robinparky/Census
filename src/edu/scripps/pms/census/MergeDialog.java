/*
 * MergeDialog.java
 *
 * Created on February 23, 2006, 12:09 PM
 */

package edu.scripps.pms.census;

import javax.swing.*;
import edu.scripps.pms.census.util.SimpleFileNameFilter;
import edu.scripps.pms.census.model.MergeProteinModel;
import java.io.*;
import java.util.*;

import edu.scripps.pms.census.model.FilterModel;

/**
 *
 * @author  rpark
 * @version $Id: MergeDialog.java,v 1.4 2009/03/13 21:55:36 rpark Exp $
 */
public class MergeDialog extends javax.swing.JDialog {
    private RelExMainFrame mFrame;
    private File currentFolder=null;
    
    /** Creates new form MergeDialog */
    public MergeDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.mFrame = (RelExMainFrame)parent;                        
        this.currentFolder = new File(mFrame.getCurrentDirectory());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        uniquePeptideRadio = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        mergeBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        dbFilePath = new javax.swing.JTextField();
        dbSelectBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        correctFactor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        filterPanel = new javax.swing.JPanel();
        detFactorCheck = new javax.swing.JCheckBox();
        detFactor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pValueCheck = new javax.swing.JCheckBox();
        pValue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        removeNegative = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        allBtn = new javax.swing.JRadioButton();
        uniqueBtn = new javax.swing.JRadioButton();
        noFilterCheck = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        filterFragmentIons = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Merge Report Files");
        fileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(fileList);

        jLabel1.setText("Select Census report files");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        mergeBtn.setText("Run Merge");
        mergeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeBtnActionPerformed(evt);
            }
        });

        dbSelectBtn.setText("...");
        dbSelectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbSelectBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Protein Database File (FASTA format)");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        correctFactor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        correctFactor.setText("0.0");

        jLabel7.setText("Correction Factor (Ln)");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel7)
                .add(83, 83, 83)
                .add(correctFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(correctFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        filterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Filters"));
        detFactorCheck.setSelected(true);
        detFactorCheck.setText("Determinant Factor(R*R)");

        detFactor.setColumns(5);
        detFactor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        detFactor.setText("0.5");

        jLabel5.setText("(0 to 1.0)");

        pValueCheck.setSelected(true);
        pValueCheck.setText("Outlier threshold p-value");

        pValue.setColumns(5);
        pValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pValue.setText("0.1");

        jLabel6.setText("(0 to 1.0)");

        removeNegative.setSelected(true);
        removeNegative.setText("Remove peptides with negative R");
        removeNegative.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        removeNegative.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout filterPanelLayout = new org.jdesktop.layout.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(filterPanelLayout.createSequentialGroup()
                        .add(212, 212, 212)
                        .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, detFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel6)))
                    .add(detFactorCheck)
                    .add(pValueCheck)
                    .add(removeNegative))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterPanelLayout.createSequentialGroup()
                .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(filterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(detFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5))
                        .add(9, 9, 9)
                        .add(filterPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(pValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 4, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, filterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(detFactorCheck)
                        .add(9, 9, 9)
                        .add(pValueCheck)
                        .add(11, 11, 11)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeNegative)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Unique Peptides"));
        uniquePeptideRadio.add(allBtn);
        allBtn.setSelected(true);
        allBtn.setText("All Peptides");
        allBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        allBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));

        uniquePeptideRadio.add(uniqueBtn);
        uniqueBtn.setText("Unique Peptides Only");
        uniqueBtn.setActionCommand("Unique Peptides");
        uniqueBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        uniqueBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(allBtn)
                    .add(uniqueBtn))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(allBtn)
                .add(15, 15, 15)
                .add(uniqueBtn)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        noFilterCheck.setText("No Filters");
        noFilterCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noFilterCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        noFilterCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFilterCheckActionPerformed(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Fragment Ion Filtering"));
        filterFragmentIons.setText("Filter fragment ions");
        filterFragmentIons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        filterFragmentIons.setEnabled(false);
        jPanel2.add(filterFragmentIons, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 180, 30));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel2))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(dbFilePath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 575, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 19, Short.MAX_VALUE)
                                .add(dbSelectBtn))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(noFilterCheck)
                            .add(layout.createSequentialGroup()
                                .add(267, 267, 267)
                                .add(mergeBtn))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(filterPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .add(layout.createSequentialGroup()
                        .add(216, 216, 216)
                        .add(addBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelBtn))
                    .add(layout.createSequentialGroup()
                        .add(253, 253, 253)
                        .add(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addBtn)
                    .add(removeBtn)
                    .add(cancelBtn))
                .add(15, 15, 15)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dbFilePath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(dbSelectBtn))
                .add(24, 24, 24)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(noFilterCheck)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(filterPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(15, 15, 15)
                .add(mergeBtn)
                .add(22, 22, 22))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noFilterCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFilterCheckActionPerformed
// TODO add your handling code here:
        if(((JCheckBox)evt.getSource()).isSelected())
        {
            this.detFactorCheck.setEnabled(false);                    
            this.detFactor.setEnabled(false);
            this.pValue.setEnabled(false);
            this.pValueCheck.setEnabled(false);
            this.detFactorCheck.setSelected(false);
            this.pValueCheck.setSelected(false);
            this.removeNegative.setSelected(false);
            this.removeNegative.setEnabled(false);
        }            
        else
        {
            this.detFactorCheck.setEnabled(true);                    
            this.detFactor.setEnabled(true);
            this.pValue.setEnabled(true);
            this.pValueCheck.setEnabled(true);        
            this.correctFactor.setEnabled(true);   
            
            this.removeNegative.setEnabled(true);
            this.detFactorCheck.setSelected(true);
            this.pValueCheck.setSelected(true);
            this.removeNegative.setSelected(true);
        }    
        
    }//GEN-LAST:event_noFilterCheckActionPerformed

    private void dbSelectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbSelectBtnActionPerformed

        // TODO add your handling code here:
//        isotopeFileField.setText(file.getAbsolutePath());
        
        
        JFileChooser choose = new JFileChooser();
        choose.setMultiSelectionEnabled(false);
        choose.setDialogTitle("Select Protein Database File (FASTA format)");
        //choose.addChoosableFileFilter( new SimpleFileNameFilter("", "Chro File") );
        if(currentFolder != null)
            choose.setCurrentDirectory(currentFolder);

        int returnVal = choose.showOpenDialog(this);
        
        File file = choose.getSelectedFile();

        if(null==file)
            return;

        this.dbFilePath.setText(file.getAbsolutePath());
    }//GEN-LAST:event_dbSelectBtnActionPerformed

    private void mergeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeBtnActionPerformed
// TODO add your handling code here:
        
        if(listModel.toArray().length<=0)
        {
            JOptionPane.showMessageDialog(this, 
                "Report file or database file is not selected", 
                "Report file or database file is not selected", 				
                JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        if(null == this.dbFilePath.getText() || "".equals(this.dbFilePath.getText()))
        {
            JOptionPane.showMessageDialog(this, 
                "Report file or database file is not selected", 
                "Report file or database file is not selected", 				
                JOptionPane.ERROR_MESSAGE);
            
            return;			        
        }

        FilterModel fModel = new FilterModel();
        fModel.setDetValue(Double.parseDouble(detFactor.getText().trim()));
        fModel.setPValue(Double.parseDouble( pValue.getText().trim() ));
        fModel.setDetSelect(this.detFactorCheck.isSelected());
        fModel.setPValueSelect(pValueCheck.isSelected());
        fModel.setFilterFragmentIons(this.filterFragmentIons.isSelected());
        fModel.setRemoveNegative(this.removeNegative.isSelected());
        
        if( "Unique Peptides".equals(this.uniquePeptideRadio.getSelection().getActionCommand()) )
            fModel.setUniquePeptide(true);
        else
            fModel.setUniquePeptide(false);
                        
        //double detFactorDValue = ;
        //double pDValue = Double.parseDouble( pValue.getText().trim() );
        
        JFileChooser choose = new JFileChooser();
        choose.setMultiSelectionEnabled(false);
        choose.setDialogTitle("Save Merged Report File");
        choose.setApproveButtonText("Merge");
       
	currentFolder = new File(mFrame.getCurrentDirectory());
	
        if(currentFolder != null)
            choose.setCurrentDirectory(currentFolder);

        File f = new File("census-merged-out.txt");
        choose.setSelectedFile(f);
        
        int returnVal = choose.showOpenDialog(this);        

        if(returnVal == choose.CANCEL_OPTION)
            return;
        
        setVisible(false);
        dispose();
        
        File file = choose.getSelectedFile();        

        mFrame.mergeFiles(listModel.toArray(), file, this.dbFilePath.getText(), fModel, Double.parseDouble( this.correctFactor.getText() ) );
        
        /*
        mFrame.mergeFiles(
                listModel.toArray(), 
                file, 
                this.dbFilePath.getText(), 
                this.detFactorCheck.isSelected(), 
                detFactorDValue, 
                pValueCheck.isSelected(), 
                pDValue, 
                this.filterFragmentIons.isSelected());
        */
	mFrame.setCurrentDirectory(currentFolder);
        
                 
    }//GEN-LAST:event_mergeBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
// TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
// TODO add your handling code here:
        
        int index = fileList.getSelectedIndex();
        listModel.remove(index);

        int size = listModel.getSize();

        //list.setSelectedIndex(index);
        //list.ensureIndexIsVisible(index);
        
        fileList.setModel(listModel);
    
    }//GEN-LAST:event_removeBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
// TODO add your handling code here:
    
        
        JFileChooser choose = new JFileChooser();
        choose.setMultiSelectionEnabled(false);
        choose.setDialogTitle("Select Chro File");
        //choose.addChoosableFileFilter( new SimpleFileNameFilter("", "Chro File") );
        if(currentFolder != null)
            choose.setCurrentDirectory(currentFolder);

        int returnVal = choose.showOpenDialog(this);
        
        File file = choose.getSelectedFile();

        if(null==file)
            return;

        listModel.addElement(file.getAbsolutePath());
        this.currentFolder = file.getAbsoluteFile();
        this.mFrame.setCurrentDirectory(file);
        
        fileList.setModel(listModel);

    }//GEN-LAST:event_addBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MergeDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JRadioButton allBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField correctFactor;
    private javax.swing.JTextField dbFilePath;
    private javax.swing.JButton dbSelectBtn;
    private javax.swing.JTextField detFactor;
    private javax.swing.JCheckBox detFactorCheck;
    private javax.swing.JList fileList;
    private javax.swing.JCheckBox filterFragmentIons;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton mergeBtn;
    private javax.swing.JCheckBox noFilterCheck;
    private javax.swing.JTextField pValue;
    private javax.swing.JCheckBox pValueCheck;
    private javax.swing.JButton removeBtn;
    private javax.swing.JCheckBox removeNegative;
    private javax.swing.JRadioButton uniqueBtn;
    private javax.swing.ButtonGroup uniquePeptideRadio;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel listModel = new DefaultListModel();
    
}
