/*
 * ExportDialog.java
 *
 * Created on February 22, 2006, 12:20 PM
 */

package edu.scripps.pms.census;

import javax.swing.*;

/**
 *
 * @author  rpark
 * @version $Id: ExportDialog.java,v 1.9 2009/10/28 00:23:46 rpark Exp $
 */
public class ExportDialog extends javax.swing.JDialog {

    private RelExMainFrame mFrame;
    
    /** Creates new form ExportDialog */
    public ExportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.mFrame = (RelExMainFrame)parent;                        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uniquePeptideRadio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        detFactorCheck = new javax.swing.JCheckBox();
        detFactor = new javax.swing.JTextField();
        factorLabel1 = new javax.swing.JLabel();
        pValueCheck = new javax.swing.JCheckBox();
        pValue = new javax.swing.JTextField();
        factorLabel2 = new javax.swing.JLabel();
        removeNegative = new javax.swing.JCheckBox();
        discardUnlabeledPeptide = new javax.swing.JCheckBox();
        discardReverseProteins = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        filterFragmentIons = new javax.swing.JCheckBox();
        exportBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        noFilterCheck = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        correctFactor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        allBtn = new javax.swing.JRadioButton();
        uniqueBtn = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        allNoneLabel1 = new javax.swing.JLabel();
        allNoneLowerBoundRatio = new javax.swing.JTextField();
        allNoneLabel2 = new javax.swing.JLabel();
        allNoneUpperBoundRatio = new javax.swing.JTextField();
        allNoneLabel3 = new javax.swing.JLabel();
        allNoneLabel4 = new javax.swing.JLabel();
        discardANCheck = new javax.swing.JCheckBox();
        allNoneCompositeScoreLabel1 = new javax.swing.JLabel();
        allNoneCompositeScore = new javax.swing.JTextField();
        allNoneCompositeScoreLabel2 = new javax.swing.JLabel();
        allNoneCompositeScoreLabel3 = new javax.swing.JLabel();
        allNoneMinPeptide = new javax.swing.JTextField();
        allNoneCompositeScoreLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Report");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Standard Filter"));

        detFactorCheck.setSelected(true);
        detFactorCheck.setText("Determination Factor(R*R)");

        detFactor.setColumns(5);
        detFactor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        detFactor.setText("0.5");

        factorLabel1.setText("(0 to 1.0)");

        pValueCheck.setSelected(true);
        pValueCheck.setText("Outlier threshold p-value");

        pValue.setColumns(5);
        pValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pValue.setText("0.1");

        factorLabel2.setText("(0 to 1.0)");

        removeNegative.setSelected(true);
        removeNegative.setText("Remove peptides with negative R");
        removeNegative.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        discardUnlabeledPeptide.setSelected(true);
        discardUnlabeledPeptide.setText("Discard unlabeled peptides");

        discardReverseProteins.setSelected(true);
        discardReverseProteins.setText("Discard reverse sequence proteins");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(detFactorCheck)
                            .add(pValueCheck))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 67, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, detFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(factorLabel1)
                            .add(factorLabel2))
                        .add(123, 123, 123))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(removeNegative)
                        .addContainerGap(280, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(discardUnlabeledPeptide)
                        .addContainerGap(316, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(discardReverseProteins)
                        .addContainerGap(270, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(detFactorCheck)
                        .add(9, 9, 9)
                        .add(pValueCheck))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(detFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(factorLabel1))
                        .add(9, 9, 9)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(factorLabel2)
                            .add(pValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(removeNegative)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(discardUnlabeledPeptide)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(discardReverseProteins))
        );

        jLabel3.setText("Filtering Parameters");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Fragment Ion Filtering"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        filterFragmentIons.setSelected(true);
        filterFragmentIons.setText("Filter fragment ions");
        filterFragmentIons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        filterFragmentIons.setEnabled(false);
        jPanel2.add(filterFragmentIons, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 180, 30));

        exportBtn.setText("Export");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        noFilterCheck.setText("No Filters");
        noFilterCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noFilterCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFilterCheckActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        correctFactor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        correctFactor.setText("0.0");

        jLabel4.setText("Correction Factor (Ln)");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(correctFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(correctFactor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Unique Peptides"));

        uniquePeptideRadio.add(allBtn);
        allBtn.setSelected(true);
        allBtn.setText("All Peptides");
        allBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        uniquePeptideRadio.add(uniqueBtn);
        uniqueBtn.setText("Unique Peptides Only");
        uniqueBtn.setActionCommand("Unique Peptides");
        uniqueBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(allBtn)
                    .add(uniqueBtn))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(allBtn)
                .add(15, 15, 15)
                .add(uniqueBtn)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Singleton peptides"));

        allNoneLabel1.setText("Area ratio lower threshold");
        allNoneLabel1.setEnabled(false);

        allNoneLowerBoundRatio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        allNoneLowerBoundRatio.setText("0.1");
        allNoneLowerBoundRatio.setEnabled(false);

        allNoneLabel2.setText("Area ratio upper threshold");
        allNoneLabel2.setEnabled(false);

        allNoneUpperBoundRatio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        allNoneUpperBoundRatio.setText("10.0");
        allNoneUpperBoundRatio.setEnabled(false);

        allNoneLabel3.setText("Light/Heavy");
        allNoneLabel3.setEnabled(false);

        allNoneLabel4.setText("Light/Heavy");
        allNoneLabel4.setEnabled(false);

        discardANCheck.setSelected(true);
        discardANCheck.setText("Discard singleton peptides");
        discardANCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        discardANCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardANCheckActionPerformed(evt);
            }
        });

        allNoneCompositeScoreLabel1.setText("Composite score threshold");
        allNoneCompositeScoreLabel1.setEnabled(false);

        allNoneCompositeScore.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        allNoneCompositeScore.setText("0.95");
        allNoneCompositeScore.setEnabled(false);

        allNoneCompositeScoreLabel2.setText("(between 0 to 1)");
        allNoneCompositeScoreLabel2.setEnabled(false);

        allNoneCompositeScoreLabel3.setText("Minimum peptide number");
        allNoneCompositeScoreLabel3.setEnabled(false);

        allNoneMinPeptide.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        allNoneMinPeptide.setText("3");
        allNoneMinPeptide.setEnabled(false);

        allNoneCompositeScoreLabel4.setText("per protein");
        allNoneCompositeScoreLabel4.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(discardANCheck)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(allNoneLabel1)
                            .add(allNoneLabel2)
                            .add(allNoneCompositeScoreLabel1)
                            .add(allNoneCompositeScoreLabel3))
                        .add(15, 15, 15)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(allNoneMinPeptide)
                            .add(allNoneCompositeScore)
                            .add(allNoneUpperBoundRatio)
                            .add(allNoneLowerBoundRatio, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(allNoneCompositeScoreLabel4)
                            .add(allNoneCompositeScoreLabel2)
                            .add(allNoneLabel3)
                            .add(allNoneLabel4))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(discardANCheck)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(allNoneLabel1)
                    .add(allNoneLowerBoundRatio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(allNoneLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(allNoneLabel2)
                    .add(allNoneUpperBoundRatio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(allNoneLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(allNoneCompositeScoreLabel1)
                    .add(allNoneCompositeScore, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(allNoneCompositeScoreLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(allNoneCompositeScoreLabel3)
                    .add(allNoneMinPeptide, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(allNoneCompositeScoreLabel4))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(noFilterCheck))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(31, 31, 31))
            .add(layout.createSequentialGroup()
                .add(261, 261, 261)
                .add(jLabel3)
                .addContainerGap(405, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(299, 299, 299)
                .add(exportBtn)
                .add(17, 17, 17)
                .add(cancelBtn)
                .addContainerGap(366, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .add(24, 24, 24)
                .add(noFilterCheck)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelBtn)
                    .add(exportBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void discardANCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardANCheckActionPerformed
// TODO add your handling code here:
        
        if(((JCheckBox)evt.getSource()).isSelected())
        {
            this.allNoneLabel1.setEnabled(false);
            this.allNoneLabel2.setEnabled(false);
            this.allNoneLabel3.setEnabled(false);
            this.allNoneLabel4.setEnabled(false);            
            this.allNoneLowerBoundRatio.setEnabled(false);
            this.allNoneUpperBoundRatio.setEnabled(false);
            
            this.allNoneCompositeScoreLabel1.setEnabled(false);
            this.allNoneCompositeScoreLabel2.setEnabled(false);
            this.allNoneCompositeScore.setEnabled(false);
            
            this.allNoneCompositeScoreLabel3.setEnabled(false);
            this.allNoneMinPeptide.setEnabled(false);
            this.allNoneCompositeScoreLabel4.setEnabled(false);
        }
        else
        {
            this.allNoneLabel1.setEnabled(true);
            this.allNoneLabel2.setEnabled(true);
            this.allNoneLabel3.setEnabled(true);
            this.allNoneLabel4.setEnabled(true);
            this.allNoneLowerBoundRatio.setEnabled(true);
            this.allNoneUpperBoundRatio.setEnabled(true);
            
            this.allNoneCompositeScoreLabel1.setEnabled(true);
            this.allNoneCompositeScoreLabel2.setEnabled(true);
            this.allNoneCompositeScore.setEnabled(true);
            
            this.allNoneCompositeScoreLabel3.setEnabled(true);
            this.allNoneMinPeptide.setEnabled(true);
            this.allNoneCompositeScoreLabel4.setEnabled(true);
        }        
    }//GEN-LAST:event_discardANCheckActionPerformed

    private void noFilterCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFilterCheckActionPerformed
// TODO add your handling code here:
        
        
        if(((JCheckBox)evt.getSource()).isSelected())
        {
            this.detFactorCheck.setEnabled(false);                    
            this.detFactor.setEnabled(false);
            this.pValue.setEnabled(false);
            this.pValueCheck.setEnabled(false);
            this.detFactorCheck.setSelected(false);
            this.pValueCheck.setSelected(false);
            this.removeNegative.setSelected(false);
            this.removeNegative.setEnabled(false);
            this.factorLabel1.setEnabled(false);
            this.factorLabel2.setEnabled(false);

            this.discardANCheck.setEnabled(false);
            this.allNoneLabel1.setEnabled(false);
            this.allNoneLabel2.setEnabled(false);
            this.allNoneLabel3.setEnabled(false);
            this.allNoneLabel4.setEnabled(false);            
            this.allNoneLowerBoundRatio.setEnabled(false);
            this.allNoneUpperBoundRatio.setEnabled(false);
            
            this.allNoneCompositeScoreLabel1.setEnabled(false);
            this.allNoneCompositeScoreLabel3.setEnabled(false);
            this.allNoneCompositeScoreLabel2.setEnabled(false);
            this.allNoneCompositeScoreLabel4.setEnabled(false);
            
            this.allNoneCompositeScore.setEnabled(false);
            this.allNoneMinPeptide.setEnabled(false);
            
            this.discardUnlabeledPeptide.setEnabled(false);
            this.discardReverseProteins.setEnabled(false);
        }            
        else
        {
            this.detFactorCheck.setEnabled(true);                    
            this.detFactor.setEnabled(true);
            this.pValue.setEnabled(true);
            this.pValueCheck.setEnabled(true);        
            this.correctFactor.setEnabled(true);   
            
            this.removeNegative.setEnabled(true);
            this.detFactorCheck.setSelected(true);
            this.pValueCheck.setSelected(true);
            this.removeNegative.setSelected(true);
            this.factorLabel1.setEnabled(true);
            this.factorLabel2.setEnabled(true);
            
            this.discardANCheck.setEnabled(true);
            this.allNoneLabel1.setEnabled(true);
            this.allNoneLabel2.setEnabled(true);
            this.allNoneLabel3.setEnabled(true);
            this.allNoneLabel4.setEnabled(true);
            this.allNoneLowerBoundRatio.setEnabled(true);
            this.allNoneUpperBoundRatio.setEnabled(true);
            
            this.allNoneCompositeScoreLabel1.setEnabled(true);            
            this.allNoneCompositeScoreLabel3.setEnabled(true);
            this.allNoneCompositeScoreLabel2.setEnabled(true);
            this.allNoneCompositeScoreLabel4.setEnabled(true);
            
            this.allNoneCompositeScore.setEnabled(true);
            this.allNoneMinPeptide.setEnabled(true);
            
            this.discardUnlabeledPeptide.setEnabled(true);
            this.discardReverseProteins.setEnabled(true);
        }               
            
    }//GEN-LAST:event_noFilterCheckActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
    // TODO add your handling code here:
        double detFactorDValue = Double.parseDouble( detFactor.getText().trim() );
        double pDValue = Double.parseDouble( pValue.getText().trim() );
        double correctFactorValue = Double.parseDouble( correctFactor.getText().trim() );
        double allNoneCompositeScore = Double.parseDouble( this.allNoneCompositeScore.getText().trim() );
        int allNoneMinPeptide = Integer.parseInt( this.allNoneMinPeptide.getText().trim() );
        
        boolean noFilter = this.noFilterCheck.isSelected();
        boolean isUniquePeptide = false;
        if( "Unique Peptides".equals(this.uniquePeptideRadio.getSelection().getActionCommand()) )
            isUniquePeptide = true;       
        
        //System.out.println("===>>" + this.uniquePeptideRadio.getSelection().getActionCommand() +"\t" + isUniquePeptide);
        
        if(!noFilter)
        {
            if(detFactorDValue>1.0 || detFactorDValue<0.0)
            {
                JOptionPane.showMessageDialog(this, "Determinant Factor must be between 0 to 1", "Determinant Factor Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            if(pDValue>1.0 || pDValue<0.0)
            {
                JOptionPane.showMessageDialog(this, "p-value must be between 0 to 1", "p-value error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }            
        }
            
        
        double allNoneLowerBound = Double.parseDouble( this.allNoneLowerBoundRatio.getText().trim() );
        double allNoneUpperBound = Double.parseDouble( this.allNoneUpperBoundRatio.getText().trim() );
        
        this.mFrame.exportReportANGUI( 
                noFilter,
                this.detFactorCheck.isSelected(),
                pValueCheck.isSelected(), 
                this.filterFragmentIons.isSelected(), 
                detFactorDValue, 
                pDValue, 
                correctFactorValue, 
                isUniquePeptide, 
                this.removeNegative.isSelected(),
                this.discardANCheck.isSelected(),                
                allNoneLowerBound,
                allNoneUpperBound,
                allNoneCompositeScore,
                allNoneMinPeptide,
                this.discardUnlabeledPeptide.isSelected(),
                this.discardReverseProteins.isSelected()
                );
        
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_exportBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
// TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allBtn;
    private javax.swing.JTextField allNoneCompositeScore;
    private javax.swing.JLabel allNoneCompositeScoreLabel1;
    private javax.swing.JLabel allNoneCompositeScoreLabel2;
    private javax.swing.JLabel allNoneCompositeScoreLabel3;
    private javax.swing.JLabel allNoneCompositeScoreLabel4;
    private javax.swing.JLabel allNoneLabel1;
    private javax.swing.JLabel allNoneLabel2;
    private javax.swing.JLabel allNoneLabel3;
    private javax.swing.JLabel allNoneLabel4;
    private javax.swing.JTextField allNoneLowerBoundRatio;
    private javax.swing.JTextField allNoneMinPeptide;
    private javax.swing.JTextField allNoneUpperBoundRatio;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField correctFactor;
    private javax.swing.JTextField detFactor;
    private javax.swing.JCheckBox detFactorCheck;
    private javax.swing.JCheckBox discardANCheck;
    private javax.swing.JCheckBox discardReverseProteins;
    private javax.swing.JCheckBox discardUnlabeledPeptide;
    private javax.swing.JButton exportBtn;
    private javax.swing.JLabel factorLabel1;
    private javax.swing.JLabel factorLabel2;
    private javax.swing.JCheckBox filterFragmentIons;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox noFilterCheck;
    private javax.swing.JTextField pValue;
    private javax.swing.JCheckBox pValueCheck;
    private javax.swing.JCheckBox removeNegative;
    private javax.swing.JRadioButton uniqueBtn;
    private javax.swing.ButtonGroup uniquePeptideRadio;
    // End of variables declaration//GEN-END:variables
    
}
