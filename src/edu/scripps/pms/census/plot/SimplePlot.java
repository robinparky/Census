/*
 * SimplePlot.java
 *
 * Created on February 28, 2006, 11:48 AM
 */

package edu.scripps.pms.census.plot;

import ptolemy.plot.plotml.PlotBoxMLParser;
import ptolemy.plot.plotml.PlotMLParser;

import edu.scripps.pms.census.plot.*;
import ptolemy.plot.plotml.PlotMLParser;
import ptolemy.plot.*;
import edu.scripps.pms.census.model.*;
import edu.scripps.pms.census.hash.*;

import java.util.*;
import java.io.*;
import java.io.RandomAccessFile;
import edu.scripps.pms.census.util.*;
import edu.scripps.pms.census.model.*;


/**
 *
 * @author  rpark
 */
public class SimplePlot extends javax.swing.JFrame {
    
    /** Creates new form SimplePlot */
    public SimplePlot() {
        super("simple plot");
        initComponents();
//        initAdd();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Original Chromatograms"));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Aligned Chromatograms"));

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Path"));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 532, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(25, 25, 25))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    
    public static void main(String args[]) throws Exception {
       
	final String path = args[0];
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SimplePlot sPlot = new SimplePlot();
                sPlot.setVisible(true);
                sPlot.Go(path);
            }
        });
        
    }
    
    public void Go(String path) {
        SimplePlot sPlot = new SimplePlot();
        sPlot.setVisible(true);
        try {
            //original plots
            
            BufferedReader br = new BufferedReader(new FileReader(path + File.separator + "chro_out.xml"));
            StringBuffer sb = new StringBuffer();
            String eachLine;

            while( null != (eachLine=br.readLine()) )
            {
                sb.append(eachLine);
            }
            
            
            sPlot.setVisible(true);
            //sPlot.setSize(1275,800);
            //jPanel1.setSize(1275,300);
            jPanel1.setVisible(true);
            
            //original plots
            Plot plot = new Plot();        
            PlotMLParser parser = new PlotMLParser(plot);
            plot.clear(true);
            plot.repaint();        
            parser.parse(null, sb.toString());
            jPanel1.add(plot);
            jPanel1.repaint();
            sPlot.add(jPanel1);
            sPlot.repaint();
            
            //aligned plots
            br = new BufferedReader(new FileReader(path + "/aligned_out.xml"));
            sb = new StringBuffer();

            while( null != (eachLine=br.readLine()) )
            {
                sb.append(eachLine);
            }

            Plot plot2 = new Plot();        
            PlotMLParser parser2 = new PlotMLParser(plot2);
            plot2.clear(true);
            //jPanel2.setSize(1275,300);
            plot2.repaint();        
            parser2.parse(null, sb.toString());
            jPanel2.setVisible(true);
            jPanel2.add(plot2);
            jPanel2.repaint();
            sPlot.add(jPanel2);
            sPlot.repaint();
            
            //path
            br = new BufferedReader(new FileReader(path + "/path_out.xml"));
            sb = new StringBuffer();

            while( null != (eachLine=br.readLine()) )
            {
                sb.append(eachLine);
            }

            Plot plot3 = new Plot();        
            PlotMLParser parser3 = new PlotMLParser(plot3);
            plot3.clear(true);
            //jPanel3.setSize(500,500);
            plot3.repaint();        
            parser3.parse(null, sb.toString());
            jPanel3.setVisible(true);
            jPanel3.add(plot3);
            jPanel3.repaint();
            sPlot.add(jPanel3);
            sPlot.repaint();
        } catch (Exception e) {   
           
        }
        System.out.println("draw...");
    }
}
