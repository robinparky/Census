/*
 * FragIonPlot.java
 *
 * Created on October 15, 2005, 1:58 PM
 */

package edu.scripps.pms.census.plot;

import java.awt.*;


/**
 *
 * @author  rpark
 */
public class FragIonPlot extends javax.swing.JPanel {
    
    /** Creates new form FragIonPlot */
    private String ionName;
    private long[] sArr;
    private long[] rArr;
    private int startIndex;
    private int endIndex;
    private boolean isQualityIon;
    
    public FragIonPlot(String ionName, long[] sArr, long[] rArr, int startIndex, int endIndex, boolean isQualityIon) {
        initComponents();
        this.ionName = ionName;
        this.sArr = sArr;
        this.rArr = rArr;
        this.startIndex = startIndex;
        this.endIndex = endIndex;
        this.isQualityIon = isQualityIon;

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 102, 102));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setPreferredSize(new java.awt.Dimension(200, 100));
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 207, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 107, Short.MAX_VALUE)
        );
    }
    // </editor-fold>//GEN-END:initComponents
    
    public void paint(Graphics g) {
        
        long maxHeight=0;
        long xLength=endIndex-startIndex+1;
        
        for(int i=startIndex;i<=endIndex;i++)
        {
            if(maxHeight<sArr[i])
                maxHeight = sArr[i];
            
            if(maxHeight<rArr[i])
                maxHeight = rArr[i];            
        }
        
        
        if(this.isQualityIon)
        {            
            g.setFont(new Font("Arial",Font.BOLD,11));
            g.setColor(Color.GREEN);                        
            g.drawRect(3, 3, 253, 55);
        }
        else
        {
            g.setFont(new Font("Arial", 0,9));
            g.setColor(Color.GRAY);            
            g.drawRect(3, 3, 253, 55);      
        }
        
        g.drawString(ionName,10,15);
        
                
        double width=250;
        double height=57;
        
        double xGridSize=width/xLength;
        double scale=0.9;
        
        int index=0;
        
        for(int i=startIndex+1;i<=endIndex;i++)
        {
            g.setColor(Color.BLUE);            
            g.drawLine((int)(3+index*xGridSize), (int)(height-sArr[i-1]*height/maxHeight*scale), (int)(3+(index+1)*xGridSize), (int)(height-sArr[i]*height/maxHeight*scale));
            g.setColor(Color.RED);
            g.drawLine((int)(3+index*xGridSize), (int)(height-rArr[i-1]*height/maxHeight*scale), (int)(3+(index+1)*xGridSize), (int)(height-rArr[i]*height/maxHeight*scale));
            
            index++;
            
        }
        
        //this.repaint();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
