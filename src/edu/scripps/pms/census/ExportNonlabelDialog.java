/*
 * ExportNonlabelDialog.java
 *
 * Created on October 10, 2006, 10:33 AM
 */

package edu.scripps.pms.census;

import edu.scripps.pms.census.conf.Configuration;
import javax.swing.*;

/**
 *
 * @author  rpark
 */
public class ExportNonlabelDialog extends javax.swing.JDialog {
    
    private RelExMainFrame mFrame;
    
    /** Creates new form ExportNonlabelDialog */
    public ExportNonlabelDialog(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        initComponents();
        
        this.mFrame = (RelExMainFrame)parent;                        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        exportBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        noNormRadio = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Report");

        exportBtn.setText("Export");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Spec Count Normalization"));

        buttonGroup.add(noNormRadio);
        noNormRadio.setSelected(true);
        noNormRadio.setText("No normalization");
        noNormRadio.setActionCommand("No norm");
        noNormRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noNormRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noNormRadioActionPerformed(evt);
            }
        });

        buttonGroup.add(jRadioButton2);
        jRadioButton2.setText("each(SpC/Length)/sum(SpC/Length)");
        jRadioButton2.setActionCommand("normal1");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(noNormRadio)
                    .add(jRadioButton2))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(noNormRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jRadioButton2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(140, 140, 140)
                        .add(exportBtn)
                        .add(24, 24, 24)
                        .add(cancelBtn)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelBtn)
                    .add(exportBtn))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noNormRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noNormRadioActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_noNormRadioActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
// TODO add your handling code here:
        Configuration conf = Configuration.getInstance();
        
        /*
        double outlierPValue = conf.getOutlierPValue();
        try{
            outlierPValue = Double.parseDouble(this.outlierPValue.getText());
        } catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Outlier P Value is invalid", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        conf.setOutlierPValue( outlierPValue );
        */
        

        String radioAction = this.buttonGroup.getSelection().getActionCommand();
        
        if("No norm".equals(radioAction.trim()))
            conf.setSpecCountNormal(Configuration.SPEC_COUNT_NO_NORMALIZATION);
        else if("normal1".equals(radioAction.trim()))
            conf.setSpecCountNormal(Configuration.SPEC_COUNT_NORMALIZATION1);


        this.mFrame.exportReport(); // noFilter, detFactorCheck.isSelected(), pValueCheck.isSelected(), this.filterFragmentIons.isSelected(), detFactorDValue, pDValue, correctFactorValue, isUniquePeptide, this.removeNegative.isSelected());
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_exportBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
// TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportNonlabelDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton noNormRadio;
    // End of variables declaration//GEN-END:variables
    
}
