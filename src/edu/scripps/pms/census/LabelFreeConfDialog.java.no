/*
 * LabelFreeConfDialog.java
 *
 * Created on May 2, 2006, 5:04 PM
 */

package edu.scripps.pms.census;

import javax.swing.*;
import java.io.*;
import org.jdom.*;
import org.jdom.output.*;

import java.util.*;

import edu.scripps.pms.census.util.*;
import edu.scripps.pms.census.io.*;
import edu.scripps.pms.census.model.*;
import edu.scripps.pms.census.*;
import javax.swing.table.*;

/**
 *
 * @author  rpark
 */
public class LabelFreeConfDialog extends javax.swing.JDialog {
    
    private RelExMainFrame mFrame;
    private File currentFolder=null;

    private final String[] PROTEIN_COLUMNS = {"Name", "C", "H", "O", "N", "S", "P", "15N", "2H", "13C", };
    private final String[] AA = {"A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y", "NTERM", "CTERM", "STAR", "POUND", "AT", };

    private final String[][] DEFAULT_CELL_DATA = {                
        {"A", "3", "5", "1", "1", "0", "0", "0", "0", "0", },
        {"C", "5", "8", "2", "2", "1", "0", "0", "0", "0", },
        {"D", "4", "5", "3", "1", "0", "0", "0", "0", "0", },
        {"E", "5", "7", "3", "1", "0", "0", "0", "0", "0", },
        {"F", "9", "9", "1", "1", "0", "0", "0", "0", "0", },
        {"G", "2", "3", "1", "1", "0", "0", "0", "0", "0", },
        {"H", "6", "7", "1", "3", "0", "0", "0", "0", "0", },
        {"I", "6", "11", "1", "1", "0", "0", "0", "0", "0", },
        {"K", "6", "12", "1", "2", "0", "0", "0", "0", "0", },
        {"L", "6", "11", "1", "1", "0", "0", "0", "0", "0", },
        {"M", "5", "9", "1", "1", "1", "0", "0", "0", "0", },
        {"N", "4", "6", "2", "2", "0", "0", "0", "0", "0", },
        {"P", "5", "7", "1", "1", "0", "0", "0", "0", "0", },
        {"Q", "5", "8", "2", "2", "0", "0", "0", "0", "0", },
        {"R", "6", "12", "1", "4", "0", "0", "0", "0", "0", },
        {"S", "3", "5", "2", "1", "0", "0", "0", "0", "0", },
        {"T", "4", "7", "2", "1", "0", "0", "0", "0", "0", },
        {"V", "5", "9", "1", "1", "0", "0", "0", "0", "0", },
        {"W", "11", "10", "1", "2", "0", "0", "0", "0", "0", },
        {"Y", "9", "9", "2", "1", "0", "0", "0", "0", "0", },
        {"NTERM", "0", "1", "0", "0", "0", "0", "0", "0", "0", },
        {"CTERM", "0", "1", "1", "0", "0", "0", "0", "0", "0", },
        {"*", "0", "0", "0", "0", "0", "0", "0", "0", "0", },
        {"#", "0", "0", "0", "0", "0", "0", "0", "0", "0", },
        {"@", "0", "0", "0", "0", "0", "0", "0", "0", "0", },
    };
    
    private DefaultTableModel isotopeLightElementModel = 
        new DefaultTableModel( this.DEFAULT_CELL_DATA, this.PROTEIN_COLUMNS) 
    {
        public boolean isCellEditable(int row, int column)
        {
            if(column==0)            
                return false;
            else
                return true;
        }        
    };
    
    
    /** Creates new form LabelFreeConfDialog */
    public LabelFreeConfDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        initAdditional();
        
        this.mFrame = (RelExMainFrame)parent;    
        this.currentFolder = new File(mFrame.getCurrentDirectory());        
    }
    
    private JTable atomTable = null;
    
    private void initAdditional()
    {
        
        atomTable = new edu.scripps.pms.census.ColorTable();
        atomTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        atomTable.setModel(isotopeLightElementModel);
        jScrollPane3.setViewportView(atomTable);
        
        /*
        this.name3.setVisible(false);
        this.name3Field.setVisible(false);
        this.scrollPane3.setVisible(false);
        this.addSpecBtn3.setVisible(false);
        this.remove3.setVisible(false);
        */
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        addSpecBtn1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        quanScanType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        isoField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        maxWinField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        isoFieldUnit = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList1 = new javax.swing.JList();
        remove1 = new javax.swing.JButton();
        elePanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        wholeEnvRadio = new javax.swing.JRadioButton();
        indivIsoRadio = new javax.swing.JRadioButton();
        envMargin = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        massAccField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        fileSelectBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setText("Number of samples");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        addSpecBtn1.setText("Add Spectra Files");
        addSpecBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSpecBtn1ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Chromatograms"));
        quanScanType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MS", "MS/MS" }));

        jLabel5.setText("Quantification Scan Type");

        jLabel10.setText("Isolation Window");
        jLabel10.setEnabled(false);

        isoField.setEditable(false);
        isoField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        isoField.setText("3");

        jLabel13.setText("Max # Scans");

        maxWinField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxWinField.setText("300");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Advanced Options"));
        jLabel17.setText("Average Interval");
        jLabel17.setEnabled(false);

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("3");
        jTextField3.setEnabled(false);

        jLabel18.setText("scans");
        jLabel18.setEnabled(false);

        jLabel19.setText("Peak Margin");
        jLabel19.setEnabled(false);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("10");
        jTextField4.setEnabled(false);

        jLabel20.setText("scans");
        jLabel20.setEnabled(false);

        jLabel21.setText("Area Diff. Threshold");
        jLabel21.setEnabled(false);

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("0.95");
        jTextField5.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel17)
                    .add(jLabel19)
                    .add(jLabel21))
                .add(22, 22, 22)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField5)
                    .add(jTextField4)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel18)
                    .add(jLabel20))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(jLabel18)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel19)
                    .add(jLabel20)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel12.setText("scans");

        isoFieldUnit.setText("m/z");
        isoFieldUnit.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel10)
                            .add(jLabel13))
                        .add(22, 22, 22)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(isoField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(isoFieldUnit))
                            .add(quanScanType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(maxWinField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel12))))
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(48, 48, 48)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(quanScanType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(isoFieldUnit)
                    .add(isoField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxWinField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12)
                    .add(jLabel13))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 37, Short.MAX_VALUE)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(fileList1);

        remove1.setText("Remove");
        remove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove1ActionPerformed(evt);
            }
        });

        elePanel.setLayout(new java.awt.BorderLayout());

        elePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Element Composition"));
        elePanel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Extraction Method"));
        wholeEnvRadio.setSelected(true);
        wholeEnvRadio.setText("Whole Isotope Envelope");
        wholeEnvRadio.setActionCommand("1");
        wholeEnvRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        wholeEnvRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        indivIsoRadio.setText("Individual Isotopes");
        indivIsoRadio.setActionCommand("2");
        indivIsoRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        indivIsoRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        envMargin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        envMargin.setText("0.3");

        jLabel14.setText("Envelope Margin");

        jLabel15.setText("m/z");

        jLabel8.setText("Mass Accuracy");

        massAccField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        massAccField.setText("30");

        jLabel16.setText("ppm");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel14)
                            .add(jLabel8))
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(massAccField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(1, 1, 1)
                                .add(jLabel16)
                                .add(6, 6, 6))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(23, 23, 23)
                                .add(envMargin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, 0)
                                .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(wholeEnvRadio)
                    .add(indivIsoRadio))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(wholeEnvRadio)
                .add(7, 7, 7)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(envMargin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel15))
                .add(21, 21, 21)
                .add(indivIsoRadio)
                .add(12, 12, 12)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(massAccField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel16)
                    .add(jLabel8))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        fileSelectBtn.setText("Open...");
        fileSelectBtn.setEnabled(false);
        fileSelectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSelectBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save...");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Alignment"));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Align Chromatograms");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel4.setText("Band Constraint");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("500");

        jLabel6.setText("scans");

        buttonGroup.add(jRadioButton1);
        jRadioButton1.setText("Base Peak");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Spectral Correlation");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jCheckBox1)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel4)
                        .add(27, 27, 27)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6))
                    .add(jRadioButton1)
                    .add(jRadioButton2))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(17, 17, 17)
                .add(jRadioButton2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jRadioButton1)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(12, 12, 12)
                                .add(addSpecBtn1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 165, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(16, 16, 16)
                                .add(remove1))
				)))
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(elePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 532, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(349, 349, 349)
                .add(fileSelectBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(22, 22, 22)
                .add(saveBtn)
                .add(635, 635, 635))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(addSpecBtn1)
                            .add(remove1))
                        .add(235, 235, 235))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(elePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 463, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(7, 7, 7)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(fileSelectBtn)
                                    .add(saveBtn))))
                        .add(31, 31, 31))))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileSelectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSelectBtnActionPerformed
// TODO add your handling code here:
    /*    JFileChooser choose = new JFileChooser();
        choose.setMultiSelectionEnabled(false);
        choose.setDialogTitle("Select Element Composition File");
        
        if(currentFolder != null)
            choose.setCurrentDirectory(currentFolder);
        
        String[] extArr = {"xml", "ini", };
        
        choose.addChoosableFileFilter( new SimpleFileNameFilter(extArr, "Isotope File") );
        
        int returnVal = choose.showOpenDialog(this);
        File file = choose.getSelectedFile();
        
        if(null==file)
            return;
        
        try {
            //listModel.addElement(file.getAbsolutePath());
            IsotopeReader reader = new IsotopeReader(file);
            IsotopeTable<String, int[]> ht = reader.getIsotope();
            
            for(int i=0;i<ElementComposition.AMINO_ACIDS.length;i++) {
                //ElementComposition element = new ElementComposition(ElementComposition.AMINO_ACIDS[i], ht);
                
                int[] samArr = ht.get("sample" + ElementComposition.AMINO_ACIDS[i]);
                int[] refArr = ht.get("ref" + ElementComposition.AMINO_ACIDS[i]);
                
                //System.out.print("------------\t" + ElementComposition.AMINO_ACIDS[i]);
                for(int j=0;j<samArr.length;j++) {
                    System.out.print(samArr[j] + " ");
                    this.isotopeLightElementModel.setValueAt(samArr[j], i+1, j+1);
                }
                //System.out.print("\t\t");
                
                //System.out.print("------------\t" + ElementComposition.AMINO_ACIDS[i]);
                for(int j=0;j<refArr.length;j++) {
                    System.out.print(refArr[j] + " ");
                    this.isotopeHeavyElementModel.setValueAt(refArr[j], i+1, j+1);
                }
                
                System.out.println("");
                
            }
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Failed to open Element Compositon File: " + e, "Failed to open Element Compositon File", JOptionPane.ERROR_MESSAGE);
        }
        
        
        this.currentFolder = file.getAbsoluteFile();
        this.mFrame.setCurrentDirectory(file);
      */  
        //fileList.setModel(listModel);
    }//GEN-LAST:event_fileSelectBtnActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
        
           JComboBox cb = (JComboBox)evt.getSource();
    
           /*
            // Get the new item
            Object newItem = cb.getSelectedItem();    

            if(cb.getSelectedIndex()>=1)
            {
                this.name3.setVisible(true);
                this.name3Field.setVisible(true);
                this.scrollPane3.setVisible(true);
                this.addSpecBtn3.setVisible(true);
                this.remove3.setVisible(true);
            }
            else
            {
                this.name3.setVisible(false);
                this.name3Field.setVisible(false);                
                this.scrollPane3.setVisible(false);
                this.addSpecBtn3.setVisible(false);
                this.remove3.setVisible(false);                
            }
            */
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
    // TODO add your handling code here:
        setVisible(false);
        dispose();
        
        Vector vec = new Vector();
               
        /*
        Element rootEle = new Element("config");
        Element labelType = new Element("label_type");        
        labelType.setAttribute("labeling", "false");
        rootEle.addContent(labelType);
                        
        Element paramEle = new Element("params");
        Element eachParam = new Element("scan_type");
        eachParam.addContent(this.quanScanType.getModel().getSelectedItem().toString());
        paramEle.addContent(eachParam);
        
        eachParam = new Element("resolution");
       // eachParam.addContent(this.resolutionField.getText());
        paramEle.addContent(eachParam);
        
        eachParam = new Element("mass_accuracy");
        eachParam.addContent(this.massAccField.getText());
        paramEle.addContent(eachParam);
        
        eachParam = new Element("iso_window");
        eachParam.addContent(this.isoField.getText());
        paramEle.addContent(eachParam);
        
        
        eachParam = new Element("max_win");
        eachParam.addContent(this.maxWinField.getText());
        paramEle.addContent(eachParam);
        
        rootEle.addContent(paramEle);
        
        //currently census support only two different sample group
        Element eachSample = new Element("sample");        
        eachSample.addContent( new Element("name").addContent( this.name1.getText() ) );
        rootEle.addContent(eachSample);

        Element msFiles = new Element("ms_files");        
        for(int i=0;i<listModel1.toArray().length;i++)
        {
            msFiles.addContent( new Element("file").addContent(listModel1.get(i).toString()) );
            vec.add( new SelectFileModel(this.name1.getText(), listModel1.get(i).toString()) );            
        }
        
        eachSample.addContent(msFiles);
        
        eachSample = new Element("sample");        
        eachSample.addContent( new Element("name").addContent( this.name2.getText() ) );        
        rootEle.addContent(eachSample);
        
        msFiles = new Element("ms_files");
        for(int i=0;i<listModel2.toArray().length;i++)
        {
            msFiles.addContent( new Element("file").addContent(listModel2.get(i).toString()) );
            vec.add( new SelectFileModel(this.name2.getText(), listModel2.get(i).toString()) );
        }
        
        eachSample.addContent(msFiles);
        
        if(listModel3.toArray().length>0)
        {
            eachSample = new Element("sample");        
            eachSample.addContent( new Element("name").addContent( this.name3.getText() ) );        
            rootEle.addContent(eachSample);

            msFiles = new Element("ms_files");
            for(int i=0;i<listModel3.toArray().length;i++)
            {
                msFiles.addContent( new Element("file").addContent(listModel3.get(i).toString()) );
                vec.add( new SelectFileModel(this.name3.getText(), listModel3.get(i).toString()) );
            }
                
            eachSample.addContent(msFiles);
            
            
        }
            
        
        //element composition
        TableModel model = this.atomTable.getModel();
                        
        Element eleCompEle = new Element("element_comp");
        Element eachSampleEle = new Element("each_sample");
        
        for(int i=0;i<this.atomTable.getRowCount();i++)
        {
            Element residueEle = new Element("residue");
            residueEle.setAttribute("name", this.atomTable.getValueAt(i,0).toString());
            
            Element eachValue = null;
            
            for(int j=1;j<this.atomTable.getColumnCount();j++)
            {                
                eachValue = new Element( "ele_" + PROTEIN_COLUMNS[j] );                
                eachValue.addContent(this.atomTable.getValueAt(i,j).toString());
                residueEle.addContent(eachValue);                
            }            
            eachSampleEle.addContent(residueEle);            
        }
        
        eleCompEle.addContent(eachSampleEle);
        rootEle.addContent(eleCompEle);
        
        SelectRefMSDialog msDia = new SelectRefMSDialog(new javax.swing.JFrame(), true, rootEle, vec);
        msDia.setVisible(true);
        
        
        
        
        */

        
        
        
        
        /*
        TableModel model = this.lightTable.getModel();
                
        //String[] chemArr = {"C", "H", "O", "N", "S", "P", "15N", "2H", "13C", };
        
        Element eleCompEle = new Element("element_comp");
        Element eachSampleEle = new Element("each_sample");
        
        for(int i=0;i<this.lightTable.getRowCount();i++)
        {
            Element residueEle = new Element("residue");
            residueEle.setAttribute("name", this.lightTable.getValueAt(i,0).toString());
            
            Element eachValue = null;
            
            for(int j=1;j<this.lightTable.getColumnCount();j++)
            {                
                eachValue = new Element( "ele_" + PROTEIN_COLUMNS[j] );                
                eachValue.addContent(this.lightTable.getValueAt(i,j).toString());
                residueEle.addContent(eachValue);                
            }            
            eachSampleEle.addContent(residueEle);            
        }
        
        eleCompEle.addContent(eachSampleEle);
        
        eachSampleEle = new Element("each_sample");
        
        for(int i=0;i<this.heavyTable.getRowCount();i++)
        {
            Element residueEle = new Element("residue");
            residueEle.setAttribute("name", this.heavyTable.getValueAt(i,0).toString());
            
            Element eachValue = null;
            
            for(int j=1;j<this.heavyTable.getColumnCount();j++)
            {                
                eachValue = new Element( "ele_" + PROTEIN_COLUMNS[j] );                
                //eachValue.setAttribute("value", this.heavyTable.getValueAt(i,j).toString());
                eachValue.addContent(this.heavyTable.getValueAt(i,j).toString());                        
                residueEle.addContent(eachValue);                
            }            
            eachSampleEle.addContent(residueEle);            
        }
        */
                
        //eleCompEle.addContent(eachSampleEle);
        
        
        //rootEle.addContent(eleCompEle);
 
    }//GEN-LAST:event_saveBtnActionPerformed

    private void remove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove1ActionPerformed
// TODO add your handling code here:
                
        int index = fileList1.getSelectedIndex();
        listModel1.remove(index);

        fileList1.setModel(listModel1);
    }//GEN-LAST:event_remove1ActionPerformed

    private void addSpecBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSpecBtn1ActionPerformed
// TODO add your handling code here:
        
        JFileChooser choose = new JFileChooser();
        choose.setMultiSelectionEnabled(false);
        choose.setDialogTitle("Select Spectra File");
        if(currentFolder != null)
            choose.setCurrentDirectory(currentFolder);

        int returnVal = choose.showOpenDialog(this);
        
        File file = choose.getSelectedFile();

        if(null==file)
            return;

        listModel1.addElement(file.getAbsolutePath());
        this.currentFolder = file.getAbsoluteFile();
        this.mFrame.setCurrentDirectory(file);
        
        fileList1.setModel(listModel1);
        
    }//GEN-LAST:event_addSpecBtn1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LabelFreeConfDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSpecBtn1;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel elePanel;
    private javax.swing.JTextField envMargin;
    private javax.swing.JList fileList1;
    private javax.swing.JButton fileSelectBtn;
    private javax.swing.JRadioButton indivIsoRadio;
    private javax.swing.JTextField isoField;
    private javax.swing.JLabel isoFieldUnit;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField massAccField;
    private javax.swing.JTextField maxWinField;
    private javax.swing.JComboBox quanScanType;
    private javax.swing.JButton remove1;
    private javax.swing.JButton saveBtn;
    private javax.swing.JRadioButton wholeEnvRadio;
    // End of variables declaration//GEN-END:variables
    
    private DefaultListModel listModel1 = new DefaultListModel();    
    private DefaultListModel listModel2 = new DefaultListModel();        
    private DefaultListModel listModel3 = new DefaultListModel();        
    
}
