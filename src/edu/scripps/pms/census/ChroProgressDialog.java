/*
 * ChroProgressDialog.java
 *
 * Created on March 23, 2005, 10:52 AM
 */

package edu.scripps.pms.census;

import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import java.awt.Color;

/**
 *
 * @author  rpark
 */
public class ChroProgressDialog extends javax.swing.JDialog {
    
     private StyledDocument doc = null;

    
    public ChroProgressDialog() {
    //    super();
    }
    
    /** Creates new form ChroProgressDialog */    
    public ChroProgressDialog(java.awt.Frame parent) {
        super(parent);

        initComponents();
        initAdditional();
        this.setSize(600, 300);        
    }

    
    /** Creates new form ChroProgressDialog */    
    public ChroProgressDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initAdditional();
        this.setSize(600, 300);
    }
    
    private void initAdditional()
    {
        doc = (StyledDocument)textPane.getDocument();
        
        //doc.

        textPane.setEditable(false);
        textPane.setAutoscrolls(true);
        scrollPane.setAutoscrolls(true);
        
        Style styleNormal = doc.addStyle("normal", null);
        
        StyleConstants.setForeground(styleNormal, Color.BLACK);
        StyleConstants.setBackground(styleNormal, Color.BLACK);
    }
    
    public void addMessageWithLine(String message)
    {
        addMessage(message + "\n");
    }
    
    public void addMessage(int message)
    {
        addMessage("" + message);
    }
    
    
    public void addMessage(String message)
    {
        try {
            doc.insertString(doc.getLength(), message, null);

            textPane.setCaretPosition(textPane.getDocument().getLength());

            textPane.paint(textPane.getGraphics());
            scrollPane.paint(scrollPane.getGraphics());
        } catch(BadLocationException ex) {
            System.out.println("Error : " + ex);
        } catch(Exception e) {
            System.out.println("Error : " + e);
        }
        
    }
    
    public void addMessageOffset(String message)
    {
        try {
            doc.insertString(doc.getLength()-message.length(), message, null);

            textPane.setCaretPosition(textPane.getDocument().getLength());

            textPane.paint(textPane.getGraphics());
            scrollPane.paint(scrollPane.getGraphics());
        } catch(BadLocationException ex) {
            System.out.println("Error : " + ex.toString());
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        progressBar = new javax.swing.JProgressBar();
        extractLabel = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        progressBar.setStringPainted(true);
        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 550, -1));

        extractLabel.setText("Generating a chro file...");
        getContentPane().add(extractLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        scrollPane.setBackground(new java.awt.Color(255, 255, 255));
        scrollPane.setForeground(new java.awt.Color(0, 0, 0));
        scrollPane.setAutoscrolls(true);
        textPane.setForeground(new java.awt.Color(0, 0, 0));
        textPane.setCaretColor(new java.awt.Color(255, 255, 255));
        scrollPane.setViewportView(textPane);

        getContentPane().add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 550, 200));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChroProgressDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    public javax.swing.JProgressBar getProgressBar()
    {
        return progressBar;
    }
    
    public void setProgress(int value)
    {
        this.progressBar.setValue(value);
    }

    public static void addMessage(ChroProgressDialog progress, String message)
    {
	if(null == progress)
	    return;

	progress.addMessage(message);
    }

    public static void addMessageWithLine(ChroProgressDialog progress, String message)
    {
	if(null == progress)
	    return;

	progress.addMessageWithLine(message);
    }
    
    public static void updateProgress(ChroProgressDialog progress, int value)
    {
	if(null == progress)
	    return;
	
	progress.setProgress(value);
    }

    /*
    public javax.swing.JTextArea getProgressText()
    {
        return progressText;
    }
     **/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel extractLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
    
}
